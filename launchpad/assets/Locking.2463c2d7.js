import { P as A, _ as E, a as T, b as B } from "./retrieval.780fe777.js"; import { a as y, aj as j, W as h, b$ as R, _ as $, f as m, o, p as g, w as b, b as e, c as n, e as i, g as p, n as _, t as d, l, a5 as F, a1 as V, c0 as X, B as Y, F as q, c1 as G, k as K } from "./index.28d01b6e.js"; import { B as D } from "./BaseModalContainer.cc4fc017.js"; import { _ as C } from "./StoreMixin.496862aa.js"; import { _ as S } from "./NumberMixin.24277370.js"; import { _ as v, i as O } from "./lock.4aca1908.js"; import { _ as W } from "./cart.3a9d18e0.js"; import "./web3.df38e8f9.js"; const z = y({ name: "LockingModal", components: { BaseModalContainer: D, FormKit: j, PercentSelector: A }, mixins: [C, S], emits: ["close", "tokens-locked"], props: { show: { type: Boolean, default: !1 }, lockingData: { type: Object, required: !1 } }, data() { return { step: 1, transactionError: !1, tokenInput: "", amountMXLT: new h(0), amountUsdc: 0, validationMessage: "", entered: !1, MXLTPrice: 0, refreshInterval: null } }, computed: { color() { return this.transactionError ? "bg-ne-red" : this.step > 2 ? "bg-ne-orange" : "bg-ne-midPurple" }, maxTokenAvailable() { var t, s, a, f; return h.min((s = (t = this.lockingData) == null ? void 0 : t.tokenLockLimitCurrent) != null ? s : new h(0), (f = (a = this.lockingData) == null ? void 0 : a.tokenUserBalance) != null ? f : new h(0)) }, tokenInputPlaceholder() { return this.lockingData ? this.formatToken(this.maxTokenAvailable, this.lockingData.tokenUnit) : "0" }, amountMXLTAsString() { return this.lockingData ? this.formatToken(this.amountMXLT, this.lockingData.tokenUnit) : "0" }, amountUsdcAsString() { return this.amountUsdc === 0 ? "???" : this.amountUsdc.toFixed(6).toString() } }, methods: { onPercentClick(t) { !this.lockingData || (this.tokenInput = this.formatToken(t, this.lockingData.tokenUnit)) }, firstStepSubmit() { !this.validateInput() || (this.step = 2) }, validateInput() { this.entered = !0, this.validationMessage = ""; let t = !0; const s = Number(this.tokenInputPlaceholder.replace(",", "")), a = Number(this.tokenInput.replace(",", "")); return this.lockingData ? !this.tokenInput || a < 1 ? (this.validationMessage = "Please specify the amount of tokens to lock!", t = !1) : this.isNumber(this.tokenInput) ? this.lockingData.tokenUserBalance.ltn(Number(this.tokenInput)) && this.lockingData.tokenLockLimitCurrent.gtn(Number(this.tokenInput)) ? (this.validationMessage = `You only have ${this.lockingData.tokenUserBalanceAsString()} MXLT to lock!`, t = !1) : (this.lockingData.tokenLockLimitCurrent.ltn(Number(this.tokenInput)) || a > s) && (this.validationMessage = `You cannot lock more then ${this.lockingData.tokenLockLimitCurrentAsString()} MXLT!`, t = !1) : (this.validationMessage = "Amount to lock must be a number!", t = !1) : (this.validationMessage = "Unexpected error!", t = !1), t }, closeModal() { this.$emit("close") }, async confirmLockTokens() { !this.authStore.walletAddress || this.amountMXLT.eqn(0) || (this.transactionError = !1, this.step = 3, await this.web3Store.lockTokens(this.amountMXLT, this.authStore.walletAddress, () => { this.step = 4 }, () => { this.closeModal(), this.$emit("tokens-locked") }).catch(() => { this.transactionError = !0 }).finally(() => { setTimeout(() => { this.closeModal() }, this.transactionError ? 5e3 : 1e3) })) }, async getMXLTCurrentPrice() { this.MXLTPrice = await R() } }, watch: { show(t) { t && (this.step = 1, this.transactionError = !1, this.tokenInput = "", this.amountMXLT = new h(0), this.amountUsdc = 0, this.validationMessage = "") }, tokenInput(t) { if (this.lockingData) { const s = this.parseToken(t, this.lockingData.tokenUnit), a = Number(t.replaceAll(",", "")); this.amountUsdc = a * this.MXLTPrice, this.validateInput() ? this.amountMXLT = s : this.amountMXLT = new h(0) } } }, mounted() { this.getMXLTCurrentPrice(), this.refreshInterval || (this.refreshInterval = setInterval(() => { this.getMXLTCurrentPrice() }, 3e4)) }, unmounted() { this.refreshInterval && clearInterval(this.refreshInterval), this.refreshInterval = null } }), H = { class: "h-full inline-block text-white w-full pt-6 md:py-6 overflow-hidden text-left align-middle transition-all transform rounded-md" }, Q = { key: 0, class: "flex justify-between items-center mb-3" }, J = e("h4", { class: "uppercase text-h4" }, " how much MXLT would you like to lock in? ", -1), Z = { key: 1, class: "h-3/5 md:mt-0 md:h-auto" }, ee = { class: "flex rounded-md border border-ne-white px-3 mb-5" }, te = { class: "w-2/3 md:py-4 border-r border-ne-white" }, se = { class: "flex justify-end items-center md:items-end h-full" }, oe = { class: "w-9/12" }, ne = e("div", { class: "w-3/12" }, [e("small", { class: "text-lg font-bold uppercase" }, "MXLT")], -1), ie = { class: "w-1/3 md:py-4" }, re = { class: "flex justify-end items-center md:items-end h-full" }, ae = e("small", { class: "text-lg font-bold uppercase" }, "usd", -1), le = ["disabled"], de = e("img", { src: v, alt: "", class: "mr-2" }, null, -1), ce = e("span", { class: "uppercase font-bold" }, "Lock MXLT", -1), me = [de, ce], ue = { key: 2, class: "h-3/5 md:mt-0 md:h-auto" }, he = { class: "flex flex-col flex-nowrap min-h-full" }, pe = { class: "mb-6 w-full" }, fe = { class: "flex rounded-md border border-ne-white px-2 py-2 md:px-5 md:py-5 flex items-center md:items-end" }, ke = { class: "text-lg md:text-4xl font-bold mr-2" }, _e = e("small", { class: "text-lg md:text-4xl font-bold uppercase" }, "MXLT", -1), ge = { class: "w-full flex flex-wrap mt-auto" }, be = { key: 3, class: "flex items-center mt-3" }, ve = e("img", { src: T, alt: "", class: "mr-2" }, null, -1), we = e("span", null, [l(" Additional lock-ins will restart the current locking time! "), e("a", { href: "#", target: "_blank", rel: "noopener", class: "underline text-ne-vividGreen" }, " Read More ")], -1), ye = [ve, we], $e = { key: 4, ref: "validationMessage", class: "flex items-center mt-3" }, Le = e("img", { src: T, alt: "", class: "mr-2" }, null, -1), xe = { key: 5, class: "flex flex-col md:flex-row pl-8 items-start md:items-center" }, Me = e("img", { src: v, alt: "", class: "mr-3 h-16 w-16 mb-4 md:mb-0" }, null, -1), Te = { key: 0 }, De = e("h3", { class: "text-h3 uppercase mb-2" }, "Locking transaction rejected", -1), Ce = e("span", null, [l(" The token locking transaction was rejected! "), e("br"), l(" Please check your wallet provider for more details. ")], -1), Se = [De, Ce], Ne = { key: 1 }, Ie = { key: 0, class: "text-h3 uppercase mb-2" }, Pe = { key: 1, class: "text-h3 uppercase mb-2" }, Ue = e("span", null, [l(" Please do not close your browser until locking is done! "), e("br"), l(" This could take a few minutes. ")], -1); function Ae(t, s, a, f, x, M) { const u = m("FormKit"), k = m("PercentSelector"), w = m("BaseModalContainer"); return o(), g(w, { show: t.show, onClose: t.closeModal, "modal-color": t.color }, { default: b(() => [e("div", H, [t.step < 3 ? (o(), n("div", Q, [J, e("img", { src: E, alt: "", class: "cursor-pointer ml-4", onClick: s[0] || (s[0] = (...r) => t.closeModal && t.closeModal(...r)) })])) : i("", !0), t.step === 1 ? (o(), n("div", Z, [p(u, { type: "form", name: "locking", id: "firstStep", actions: !1, onSubmit: t.firstStepSubmit, autocomplete: "off", "form-class": "flex flex-col flex-nowrap min-h-full" }, { default: b(() => [e("div", ee, [e("div", te, [e("div", se, [e("div", oe, [p(u, { type: "text", pattern: "[0-9]*", placeholder: t.tokenInputPlaceholder, modelValue: t.tokenInput, "onUpdate:modelValue": s[1] || (s[1] = r => t.tokenInput = r), name: "amount", min: "1", "input-class": "text-ne-white text-lg md:text-4xl font-bold w-full bg-ne-midPurple border-0 text-right p-2 uppercase" }, null, 8, ["placeholder", "modelValue"])]), ne])]), e("div", ie, [e("div", re, [p(u, { type: "text", placeholder: "???", modelValue: t.amountUsdcAsString, "onUpdate:modelValue": s[2] || (s[2] = r => t.amountUsdcAsString = r), name: "amountUsdc", disabled: "true", "input-class": "text-ne-gray text-lg font-bold w-full bg-ne-midPurple border-0 text-right p-2 uppercase" }, null, 8, ["modelValue"]), ae])])]), p(k, { class: "mb-6 w-full", onPercentClick: t.onPercentClick, amount: t.amountMXLT, "max-amount": t.maxTokenAvailable }, null, 8, ["onPercentClick", "amount", "max-amount"]), e("button", { class: _(["btn-ui bg-primary w-full text-center flex justify-center items-center mt-auto", !!t.validationMessage || !t.entered ? "opacity-50 hover:opacity-50" : ""]), type: "button", disabled: !!t.validationMessage || !t.entered, onClick: s[3] || (s[3] = r => t.$formkit.submit("firstStep")) }, me, 10, le)]), _: 1 }, 8, ["onSubmit"])])) : t.step === 2 ? (o(), n("div", ue, [e("div", he, [e("div", pe, [e("div", fe, [e("span", ke, d(t.amountMXLTAsString), 1), _e])]), e("div", ge, [e("button", { type: "button", class: "btn-ui bg-primary grow w-full mb-2 md:w-auto md:mr-1 md:mb-0", onClick: s[4] || (s[4] = (...r) => t.confirmLockTokens && t.confirmLockTokens(...r)) }, " Yes "), e("button", { type: "button", class: "border border-ne-white grow w-full py-1.5 rounded-md md:w-auto md:ml-1 md:py-0", onClick: s[5] || (s[5] = r => t.step = 1) }, " No ")])])])) : i("", !0), t.step <= 2 ? (o(), n("div", be, ye)) : i("", !0), t.step <= 2 && t.validationMessage ? (o(), n("div", $e, [Le, e("span", null, d(t.validationMessage), 1)], 512)) : i("", !0), t.step > 2 ? (o(), n("div", xe, [Me, t.transactionError ? (o(), n("div", Te, Se)) : (o(), n("div", Ne, [t.step === 3 ? (o(), n("h3", Ie, " Waiting for locking approval ")) : (o(), n("h3", Pe, " Locking process ongoing ")), Ue]))])) : i("", !0)])]), _: 1 }, 8, ["show", "onClose", "modal-color"]) } var Ee = $(z, [["render", Ae]]); const Be = y({ name: "RetrievalModal", components: { BaseModalContainer: D }, props: { show: { type: Boolean, required: !0 }, step: { type: Number, required: !0, default: 1 }, transactionError: { type: Boolean, required: !0, default: !1 } }, emits: ["close"], computed: { modalColor() { return this.transactionError ? "bg-ne-red" : "bg-ne-orange" } } }), je = { class: "h-full inline-block text-white w-full pt-24 md:py-6 overflow-hidden text-left align-middle transition-all transform rounded-md" }, Re = { class: "flex flex-col md:flex-row pl-8 items-start md:items-center" }, Fe = e("img", { src: B, alt: "", class: "mr-3 h-16 w-16 mb-4 md:mb-0" }, null, -1), Ve = { key: 0 }, Xe = e("h3", { class: "text-h3 uppercase mb-2" }, "Retrieval transaction rejected", -1), Ye = e("span", null, [l(" The token retrieval transaction was rejected! "), e("br"), l(" Please check your wallet provider for more details. ")], -1), qe = [Xe, Ye], Ge = { key: 1 }, Ke = { key: 0, class: "text-h3 uppercase mb-2" }, Oe = { key: 1, class: "text-h3 uppercase mb-2" }, We = e("span", null, [l(" Please do not close your browser until retrieval is done! "), e("br"), l(" This could take a few minutes. ")], -1); function ze(t, s, a, f, x, M) { const u = m("BaseModalContainer"); return o(), g(u, { "outer-close": !1, show: t.show, onClose: s[0] || (s[0] = k => t.$emit("close")), "modal-color": t.modalColor }, { default: b(() => [e("div", je, [e("div", Re, [Fe, t.transactionError ? (o(), n("div", Ve, qe)) : (o(), n("div", Ge, [t.step === 1 ? (o(), n("h3", Ke, " Waiting for retrieve approval ")) : (o(), n("h3", Oe, " Retrieval process ongoing ")), We]))])])]), _: 1 }, 8, ["show", "modal-color"]) } var He = $(Be, [["render", ze]]), Qe = "/assets/cart-plus.7b80224b.svg", Je = "/assets/card.0406350c.svg", N = "/assets/unlock.5016cb7e.svg", L = "/assets/exclamation-mark.30e41861.svg", Ze = "/assets/land.8bf1cc48.svg"; const et = y({ name: "LockingView", components: { LoadingIndicator: F, LockingModal: Ee, VueCountDown: O, RetrievalModal: He }, mixins: [C, S], computed: { userLockingData() { return this.lockingStore.lockingData }, canLock() { return !this.lockingEnabled || !this.userLockingData ? !1 : this.userLockingData.tokenLockLimitCurrent.gtn(0) }, isLocked() { return this.userLockingData ? this.userLockingData.tokenLockedAmount.gtn(0) : !1 }, isFinished() { return this.lockEndIn <= 0 }, lockEndIn() { return this.userLockingData ? this.userLockingData.tokenLockEndDate.diff(V()) : 0 } }, data() { return { loading: !0, showLockingModal: !1, showRetrievalModal: !1, retrievalModalStep: 1, retrievalModalError: !1, buyMXLTUrl: X, buyLandUrl: Y, faqUrl: q, lockingEnabled: G === "true" } }, created() { this.lockingStore.init().then(() => { this.loading = !1 }) }, unmounted() { this.lockingStore.reset() }, methods: { openModal() { this.showLockingModal = !0 }, closeModal() { this.showLockingModal = !1 }, onLockSuccess() { this.lockingStore.refresh() }, onLockTimeout() { this.lockingStore.refresh() }, async retrieveTokens() { !this.authStore.walletAddress || !this.userLockingData || (this.retrievalModalStep = 1, this.retrievalModalError = !1, this.showRetrievalModal = !0, await this.web3Store.unlockTokens(this.authStore.walletAddress, () => { this.retrievalModalStep = 2 }, () => { this.userLockingData && (this.userLockingData.tokenLockedAmount = new h(0)), this.lockingStore.refresh() }).catch(() => { this.retrievalModalError = !0 }).finally(() => { setTimeout(() => { this.showRetrievalModal = !1 }, this.retrievalModalError ? 5e3 : 1e3) })) } } }), tt = { key: 1, class: "py-12 xl:py-0 md:min-h-full md:flex md:justify-center md:items-center" }, st = { class: "mx-4 md:w-3/4 2xl:max-w-[806px] 2xl:m-auto" }, ot = { class: "flex justify-end mb-8" }, nt = ["href"], it = e("img", { src: Qe, alt: "", class: "mr-2" }, null, -1), rt = e("span", { class: "uppercase" }, "Buy more MXLT", -1), at = [it, rt], lt = { key: 0, class: "bg-ne-white rounded-md p-4 mb-6" }, dt = e("div", { class: "mb-2 flex items-center" }, [e("img", { src: Je, alt: "", class: "mr-2" }), e("h3", { class: "text-h4 md:text-h3 uppercase text-black" }, " My tier assets ")], -1), ct = { class: "bg-ne-midPurple rounded-md p-5 mb-4" }, mt = e("div", { class: "flex items-center mb-3" }, [e("img", { src: v, alt: "", class: "mr-2" }), e("h4", { class: "text-h4 uppercase" }, "Locking")], -1), ut = { class: "bg-ne-deepPurple mb-4 rounded-md" }, ht = { class: "p-3 border-b-2 border-b-ne-midPurple overflow-x-auto" }, pt = e("small", { class: "block uppercase font-bold" }, "Left from limit", -1), ft = { class: "text-h5 mr-1" }, kt = e("span", { class: "uppercase" }, "MXLT", -1), _t = { class: "flex flex-wrap flex-col md:flex-row" }, gt = e("small", { class: "block uppercase font-bold" }, "Locked", -1), bt = { class: "text-h5 mr-2" }, vt = e("span", { class: "uppercase" }, "MXLT", -1), wt = e("small", { class: "block uppercase font-bold" }, "Locking date", -1), yt = { class: "text-h5" }, $t = { class: "block uppercase font-bold" }, Lt = { class: "uppercase text-h5" }, xt = { key: 1, class: "text-h5 uppercase" }, Mt = e("img", { src: N, alt: "", class: "h-5 w-5 mr-2" }, null, -1), Tt = e("span", { class: "uppercase text-sm" }, "Retrieve MXLT", -1), Dt = [Mt, Tt], Ct = { class: "flex flex-wrap justify-between items-center" }, St = { class: "mb-2 grid grid-cols-1" }, Nt = { class: "flex items-center md:w-auto md:mb-0" }, It = e("img", { src: L, alt: "", class: "mr-2" }, null, -1), Pt = { class: "font-thin" }, Ut = { key: 0, class: "flex items-center md:w-auto md:mb-0" }, At = e("img", { src: L, alt: "", class: "mr-2" }, null, -1), Et = e("span", { class: "font-thin" }, " Locking is disabled temporarily! ", -1), Bt = [At, Et], jt = e("img", { src: N, alt: "", class: "h-5 w-5 mr-2" }, null, -1), Rt = e("span", { class: "uppercase text-sm" }, "Retrieve MXLT", -1), Ft = [jt, Rt], Vt = e("img", { src: v, alt: "", class: "mr-2" }, null, -1), Xt = e("span", { class: "uppercase" }, "Lock MXLT", -1), Yt = [Vt, Xt], qt = { class: "rounded-md bg-ne-midPurple p-4 flex flex-wrap justify-between" }, Gt = { class: "flex flex-wrap items-center" }, Kt = e("div", { class: "w-full mb-2 flex mr-1 text-h5 md:text-h4 uppercase md:mb-0 md:w-auto" }, [e("img", { src: Ze, alt: "", class: "mr-2 shrink-0" }), e("span", null, "My Tiles:")], -1), Ot = { class: "mb-4 md:mb-0 flex items-center" }, Wt = { class: "text-h4 mr-2" }, zt = ["href"], Ht = e("img", { src: W, alt: "", class: "mr-2" }, null, -1), Qt = e("span", { class: "uppercase" }, "Buy land", -1), Jt = [Ht, Qt], Zt = e("div", { class: "flex items-center" }, [e("img", { src: L, alt: "", class: "mr-2" }), e("span", null, [e("a", { class: "underline text-ne-vividGreen", href: "https://whitepaper.metaxland.io/launchpad/token-locking", target: "_blank", rel: "noopener" }, " Learn more"), l(" about MXLT locking, MLV and our presale system! ")])], -1); function es(t, s, a, f, x, M) { const u = m("LoadingIndicator"), k = m("VueCountDown"), w = m("LockingModal"), r = m("RetrievalModal"); return o(), n(K, null, [t.loading ? (o(), g(u, { key: 0 })) : (o(), n("div", tt, [e("div", st, [e("div", ot, [e("a", { class: "w-full mb-2 md:mb-0 md:w-52 btn-ui bg-primary flex justify-center items-center", href: t.buyMXLTUrl, target: "_blank", rel: "noopener" }, at, 8, nt)]), t.userLockingData ? (o(), n("div", lt, [dt, e("div", ct, [mt, e("div", ut, [e("div", ht, [pt, e("span", ft, d(t.userLockingData.tokenLockLimitCurrentAsString()), 1), kt]), e("div", _t, [e("div", { class: _(["border-b-2 border-b-ne-midPurple md:border-b-0 md:border-r-2 md:border-r-ne-midPurple p-3 overflow-x-auto", t.isFinished ? "md:w-3/12" : "w-full md:w-1/3"]) }, [gt, e("span", bt, d(t.userLockingData.tokenLockedAmountAsString()), 1), vt], 2), t.isLocked ? (o(), n("div", { key: 0, class: _(["border-b-2 border-b-ne-midPurple md:border-b-0 md:border-r-2 md:border-r-ne-midPurple p-3", t.isFinished ? "md:w-3/12" : "w-full md:w-1/3"]) }, [wt, e("span", yt, d(t.userLockingData.tokenLockStartDate.format("DD MMM YYYY")), 1)], 2)) : i("", !0), t.isLocked ? (o(), n("div", { key: 1, class: _(["p-3 flex justify-between", t.isFinished ? "md:w-6/12" : "w-full md:w-1/3"]) }, [e("div", null, [e("small", $t, d(t.isFinished ? "Locking period" : "Lock ends in"), 1), t.isFinished ? (o(), n("span", xt, " Is over ")) : (o(), g(k, { key: 0, time: t.lockEndIn, onEnd: t.onLockTimeout }, { default: b(({ days: c, hours: I, minutes: P, seconds: U }) => [e("span", Lt, d(`${c}D ${I}H ${P}M ${U}S`), 1)]), _: 1 }, 8, ["time", "onEnd"]))]), t.isFinished ? (o(), n("button", { key: 0, class: "hidden btn-ui bg-ne-vividGreen md:flex justify-center items-center px-4 w-7/12", onClick: s[0] || (s[0] = (...c) => t.retrieveTokens && t.retrieveTokens(...c)) }, Dt)) : i("", !0)], 2)) : i("", !0)])]), e("div", Ct, [e("div", St, [e("div", Nt, [It, e("span", Pt, " Maximum amount of locked MXLT is " + d(t.userLockingData.tokenLockLimitMaxAsString()), 1)]), t.canLock ? i("", !0) : (o(), n("div", Ut, Bt))]), t.isFinished && t.isLocked ? (o(), n("button", { key: 0, class: "btn-ui bg-ne-vividGreen flex justify-center items-center px-4 w-full mb-4 md:hidden", onClick: s[1] || (s[1] = (...c) => t.retrieveTokens && t.retrieveTokens(...c)) }, Ft)) : i("", !0), t.canLock ? (o(), n("button", { key: 1, type: "button", onClick: s[2] || (s[2] = (...c) => t.openModal && t.openModal(...c)), class: "w-full border-ne-white rounded-md border-2 flex justify-center items-center py-1 px-2 md:w-auto" }, Yt)) : i("", !0)])]), e("div", qt, [e("div", Gt, [Kt, e("div", Ot, [e("span", Wt, d(t.formatNumber(t.userLockingData.mintedLandTiles)), 1)])]), e("a", { type: "button", class: "w-full rounded-md border-2 border-ne-white flex justify-center items-center py-1 px-3 md:w-auto", href: t.buyLandUrl, target: "_blank", rel: "noopener" }, Jt, 8, zt)])])) : i("", !0), Zt])])), p(w, { show: t.showLockingModal, "locking-data": t.userLockingData, onClose: t.closeModal, onTokensLocked: t.onLockSuccess }, null, 8, ["show", "locking-data", "onClose", "onTokensLocked"]), p(r, { show: t.showRetrievalModal, step: t.retrievalModalStep, "transaction-error": t.retrievalModalError, onClose: s[3] || (s[3] = c => t.showRetrievalModal = !1) }, null, 8, ["show", "step", "transaction-error"])], 64) } var ds = $(et, [["render", es]]); export { ds as default };
